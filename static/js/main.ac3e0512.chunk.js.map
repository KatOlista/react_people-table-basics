{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleList/PeopleList.tsx","api.ts","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","getLinkClass","isActive","cn","className","role","to","App","HomePage","Loader","Sex","PersonLink","person","name","sex","slug","isFemale","FEMALE","PersonItem","selectedPersonSlug","born","died","fatherName","motherName","mother","father","isSelected","PeopleList","people","useParams","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","peopleFromServer","getParent","parentName","find","addParent","catch","finally","hasErrorMessage","isPeopleOnServer","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ac3e0512.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nenum Sex {\n  FEMALE = 'f',\n  MALE = 'm',\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  const isFemale = sex === Sex.FEMALE;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': isFemale })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedPersonSlug }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    fatherName = '-',\n    motherName = '-',\n    mother,\n    father,\n  } = person;\n\n  const isSelected = selectedPersonSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : motherName || '-'}\n      </td>\n\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const selectedPersonSlug = slug || '';\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={selectedPersonSlug}\n          />\n        ))}\n      </tbody>\n\n      <Outlet />\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n\nexport function addParent(people: Person[]) {\n  function getParent(parentName: string) {\n    return people.find(person => person.name === parentName);\n  }\n\n  return people.map(person => {\n    let mother;\n    let father;\n\n    if (person.motherName) {\n      mother = getParent(person.motherName);\n    }\n\n    if (person.fatherName) {\n      father = getParent(person.fatherName);\n    }\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n}\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from '../../components/Loader';\nimport { PeopleList } from '../../components/PeopleList';\nimport { addParent, getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => setPeople(addParent(peopleFromServer)))\n      .catch(() => {\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const hasErrorMessage = hasError && !isLoading;\n  const isPeopleOnServer = !people.length && !hasError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {hasErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (<PeopleList people={people} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n// import { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\n// import { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}